version: '2'

services:
  client:
    build:
      context: .
      dockerfile: ./Dockerfile.development
    depends_on:
      - server
    command:
      [
        'node_modules/.bin/webpack-dev-server',
        '--config',
        './webpack/webpack.development.config.js',
      ]
    ports:
      - ${CLIENT_PORT:-4000}:8080
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - CLIENT_HOST=0.0.0.0
      - SERVER_PROTOCOL=${SERVER_PROTOCOL:-http}
      - SERVER_HOST=${SERVER_HOST:-localhost}
      - SERVER_PORT=${SERVER_PORT:-3000}
    volumes:
      - ./app:/home/node/app/app
      - ./config:/home/node/app/config

  server:
    build:
      context: .
      dockerfile: ./Dockerfile.development
    depends_on:
      - db
    entrypoint:
      ['wait-for-it', 'db:5432', '--', 'sh', 'scripts/setupDevServer.sh']
    command:
      [
        'node_modules/.bin/nodemon',
        'server/startServer.js',
        '--watch',
        'server',
        '--watch',
        'config',
        '--ext',
        'js,graphql',
      ]
    ports:
      - ${SERVER_PORT:-3000}:3000
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - POSTGRES_USER=${POSTGRES_USER:-dev}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-editoria_dev}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - PUBSWEET_SECRET=${PUBSWEET_SECRET:-dev_secret}
      - LANGUAGE_PORT=8010
      - LANGUAGE_ENDPOINT=http://language-tool
      - SERVER_PORT=${SERVER_PORT:-3050}
      - CLIENT_PROTOCOL=${CLIENT_PROTOCOL:-http}
      - CLIENT_HOST=${CLIENT_HOST:-0.0.0.0}
      - CLIENT_PORT=${CLIENT_PORT:-4000}
      - MAILER_USER=${MAILER_USER:-xpub@sandbox9af3d5dc64334deca9759efe7056d6b3.mailgun.org}
      - MAILER_PASSWORD=${MAILER_PASSWORD:-xpubpass}
      - MAILER_SENDER=${MAILER_SENDER:-dev@example.com}
      - MAILER_HOSTNAME=${MAILER_HOSTNAME:-smtp.mailgun.org}
      - PASSWORD_RESET_URL=${PASSWORD_RESET_URL:-http://editoria:3050/password-reset}
      - PASSWORD_RESET_SENDER=${PASSWORD_RESET_SENDER:-dev@example.com}
      - S3_ENDPOINT=file_hosting
      - S3_PORT=9000
      - S3_ACCESS_KEY_ID_ADMIN='admin'
      - S3_SECRET_ACCESS_KEY_ADMIN='superSecretAdminPassword'
      - S3_ACCESS_KEY_ID_USER='editoria'
      - S3_SECRET_ACCESS_KEY_USER='superSecretUserPassword'
      - S3_BUCKET='uploads'
      - SERVICE_EPUB_CHECKER_CLIENT_ID=59a3392b-0c4f-4318-bbe2-f86eff6d3de4
      - SERVICE_EPUB_CHECKER_SECRET=asldkjLKJLaslkdf897kjhKUJH
      - SERVICE_EPUB_CHECKER_URL=epubchecker:3001
      - SERVICE_ICML_CLIENT_ID=59a3392b-0c4f-4318-bbe2-f86eff6d3de4
      - SERVICE_ICML_SECRET=asldkjLKJLaslkdf897kjhKUJH
      - SERVICE_ICML_URL=icml:3002
      - SERVICE_PAGEDJS_CLIENT_ID=59a3392b-0c4f-4318-bbe2-f86eff6d3de4
      - SERVICE_PAGEDJS_SECRET=asldkjLKJLaslkdf897kjhKUJH
      - SERVICE_PAGEDJS_URL=pagedjs:3003
      - SERVICE_XSWEET_CLIENT_ID=59a3392b-0c4f-4318-bbe2-f86eff6d3de4
      - SERVICE_XSWEET_SECRET=asldkjLKJLaslkdf897kjhKUJH
      - SERVICE_XSWEET_URL=xsweet:3004
      - WAIT_SERVICE_PORT=db:5432

    volumes:
      - ./config:/home/node/app/config
      - ./server:/home/node/app/server
      - ./logs:/home/node/app/logs

  language-tool:
    image: silviof/docker-languagetool
    restart: always
    ports:
      - ${LANGUAGE_PORT:-8010}:8010
  epubchecker:
    depends_on:
      - db-epubchecker
    build:
      context: https://gitlab.coko.foundation/cokoapps/epub-checker.git
      dockerfile: ./Dockerfile.development
    ports:
      - 3001:3000
    environment:
      - PUBSWEET_SECRET=epubchecker_dev_secret
      - POSTGRES_USER=epubchecker_user_dev
      - POSTGRES_PASSWORD=epubchecker_user_password
      - POSTGRES_HOST=db-epubchecker
      - POSTGRES_DB=epubchecker_dev
      - POSTGRES_PORT=5432
      - SERVER_PORT=3000
      - NODE_ENV=development
      - WAIT_SERVICE_PORT=db-epubchecker:5432
    entrypoint:
      [
        'sh',
        'scripts/wait-for-it.sh',
        'db-epubchecker:5432',
        '--',
        'sh',
        'scripts/setupDevServer.sh',
      ]
    command: ['node', './server/startServer.js']
  icml:
    depends_on:
      - db-icml
    build:
      context: https://gitlab.coko.foundation/cokoapps/icml.git
      dockerfile: ./Dockerfile.development
    ports:
      - 3002:3000
    environment:
      - PUBSWEET_SECRET=icml_dev_secret
      - POSTGRES_USER=icml_user_dev
      - POSTGRES_PASSWORD=icml_user_password
      - POSTGRES_HOST=db-icml
      - POSTGRES_DB=icml_dev
      - POSTGRES_PORT=5432
      - SERVER_PORT=3000
      - NODE_ENV=development
      - WAIT_SERVICE_PORT=db-icml:5432
    entrypoint:
      [
        'sh',
        'scripts/wait-for-it.sh',
        'db-icml:5432',
        '--',
        'sh',
        'scripts/setupDevServer.sh',
      ]
    command: ['node', './server/startServer.js']
  pagedjs:
    depends_on:
      - db-pagedjs
    build:
      context: https://gitlab.coko.foundation/cokoapps/pagedjs.git
      dockerfile: ./Dockerfile.development
    ports:
      - 3003:3000
    environment:
      - PUBSWEET_SECRET=pagedjs_dev_secret
      - POSTGRES_USER=pagedjs_user_dev
      - POSTGRES_PASSWORD=pagedjs_user_password
      - POSTGRES_HOST=db-pagedjs
      - POSTGRES_DB=pagedjs_dev
      - POSTGRES_PORT=5432
      - SERVER_PORT=3000
      - SERVER_URL=http://localhost:3003
      - NODE_ENV=development
      - WAIT_SERVICE_PORT=db-pagedjs:5432
    security_opt:
      - seccomp:unconfined
    entrypoint:
      [
        'sh',
        'scripts/wait-for-it.sh',
        'db-pagedjs:5432',
        '--',
        'sh',
        'scripts/setupDevServer.sh',
      ]
    command: ['node', './server/startServer.js']
  xsweet:
    depends_on:
      - db-xsweet
    build:
      context: https://gitlab.coko.foundation/cokoapps/xsweet.git
      dockerfile: ./Dockerfile.development
    ports:
      - 3004:3000
    environment:
      - PUBSWEET_SECRET=xsweet_dev_secret
      - POSTGRES_USER=xsweet_user_dev
      - POSTGRES_PASSWORD=xsweet_user_password
      - POSTGRES_HOST=db-xsweet
      - POSTGRES_DB=xsweet_dev
      - POSTGRES_PORT=5432
      - SERVER_PORT=3000
      - NODE_ENV=development
      - WAIT_SERVICE_PORT=db-xsweet:5432
    entrypoint:
      [
        'sh',
        'scripts/wait-for-it.sh',
        'db-xsweet:5432',
        '--',
        'sh',
        'scripts/setupDevServer.sh',
      ]
    command: ['node', './server/startServer.js']
  db:
    image: postgres:12-alpine
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    environment:
      - POSTGRES_USER
      - POSTGRES_DB
      - POSTGRES_PASSWORD
  db-epubchecker:
    image: postgres:12-alpine
    environment:
      - POSTGRES_USER=epubchecker_user_dev
      - POSTGRES_DB=epubchecker_dev
      - POSTGRES_PASSWORD=epubchecker_user_password
  db-icml:
    image: postgres:12-alpine
    environment:
      - POSTGRES_USER=icml_user_dev
      - POSTGRES_DB=icml_dev
      - POSTGRES_PASSWORD=icml_user_password
  db-pagedjs:
    image: postgres:12-alpine
    environment:
      - POSTGRES_USER=pagedjs_user_dev
      - POSTGRES_DB=pagedjs_dev
      - POSTGRES_PASSWORD=pagedjs_user_password
  db-xsweet:
    image: postgres:12-alpine
    environment:
      - POSTGRES_USER=xsweet_user_dev
      - POSTGRES_DB=xsweet_dev
      - POSTGRES_PASSWORD=xsweet_user_password
  file_hosting:
    image: minio/minio
    ports:
      - ${S3_PORT:-9000}:9000
    volumes:
      - ./storage/minio:/data
    environment:
      - MINIO_ACCESS_KEY=${S3_ACCESS_KEY_ID_ADMIN:-accessKey}
      - MINIO_SECRET_KEY=${S3_SECRET_ACCESS_KEY_ADMIN:-secretKey}
    command: server /data

  createbucket:
    image: minio/mc
    depends_on:
      - file_hosting
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add editoria http://file_hosting:9000 ${S3_ACCESS_KEY_ID_ADMIN:-admin} ${S3_SECRET_ACCESS_KEY_ADMIN:-adminSuperPassword};
      /usr/bin/mc admin user add editoria/ ${S3_ACCESS_KEY_ID_USER:-editoria} ${S3_SECRET_ACCESS_KEY_USER:-editoriaSuperPassword};
      /usr/bin/mc admin user enable editoria/ ${S3_ACCESS_KEY_ID_USER:-editoria};
      /usr/bin/mc mb editoria/${S3_BUCKET:-uploads};
      /usr/bin/mc admin policy set editoria/ readwrite user=${S3_ACCESS_KEY_ID_USER};
      exit 0;
      "
