version: '3'

services:
  server:
    build:
      context: .
      dockerfile: ./Dockerfile-production
      args:
        - node_env=${NODE_ENV:-production}
        - server_protocol=http
        - server_host=server
        - server_port=3000
        - client_ws_min_timeout=${CLIENT_WS_MIN_TIMEOUT:-3000}
        - client_ws_timeout=${CLIENT_WS_TIMEOUT:-30000}
    ports:
      - ${SERVER_PORT:-3000}:${SERVER_PORT:-3000}
    environment:
      - NODE_ENV=production
      - EDITORIA_FLAVOUR=${EDITORIA_FLAVOUR:-VANILLA}
      - PUBSWEET_SECRET=${PUBSWEET_SECRET:-dev_secret}
      - EXTERNAL_SERVER_URL=${EXTERNAL_SERVER_URL:-null}
      - SERVE_CLIENT=true
      - POSTGRES_HOST=159.69.144.208
      - POSTGRES_PORT=5432
      - POSTGRES_DB=editoria_production_test
      - POSTGRES_USER=editoria_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-otPo9$9peYX7!b}
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-password}
      - ADMIN_GIVEN_NAME=${ADMIN_GIVEN_NAME:-Admin}
      - ADMIN_SURNAME=${ADMIN_SURNAME:-Adminius}
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@example.com}
      - SERVER_PORT=${SERVER_PORT:-3000}
      - SERVER_HOST=${SERVER_HOST:-server}
      - MAILER_USER=${MAILER_USER}
      - MAILER_PASSWORD=${MAILER_PASSWORD}
      - MAILER_SENDER=${MAILER_SENDER:-dev@example.com}
      - MAILER_HOSTNAME=${MAILER_HOSTNAME}
      - PASSWORD_RESET_PATH=${PASSWORD_RESET_PATH:-password-reset}
      - S3_PROTOCOL=${S3_PROTOCOL:-http}
      - S3_HOST=${S3_HOST:-file_hosting}
      - S3_PORT=${S3_PORT:-9000}
      - S3_ACCESS_KEY_ID_ADMIN=${S3_ACCESS_KEY_ID_ADMIN:-admin}
      - S3_SECRET_ACCESS_KEY_ADMIN=${S3_SECRET_ACCESS_KEY_ADMIN:-superSecretAdminPassword}
      - S3_ACCESS_KEY_ID_USER=${S3_ACCESS_KEY_ID_USER:-editoria}
      - S3_SECRET_ACCESS_KEY_USER=${S3_SECRET_ACCESS_KEY_USER:-superSecretUserPassword}
      - S3_BUCKET=${S3_BUCKET:-uploads}
      - SERVICE_EPUB_CHECKER_CLIENT_ID=59a3392b-0c4f-4318-bbe2-f86eff6d3de4
      - SERVICE_EPUB_CHECKER_SECRET=asldkjLKJLaslkdf897kjhKUJH
      - SERVICE_EPUB_CHECKER_PROTOCOL=${SERVICE_EPUB_CHECKER_PROTOCOL:-http}
      - SERVICE_EPUB_CHECKER_HOST=${SERVICE_EPUB_CHECKER_HOST:-epubchecker}
      - SERVICE_EPUB_CHECKER_PORT=${SERVICE_EPUB_CHECKER_PORT:-3001}
      - SERVICE_ICML_CLIENT_ID=59a3392b-0c4f-4318-bbe2-f86eff6d3de4
      - SERVICE_ICML_SECRET=asldkjLKJLaslkdf897kjhKUJH
      - SERVICE_ICML_PROTOCOL=${SERVICE_ICML_PROTOCOL:-http}
      - SERVICE_ICML_HOST=${SERVICE_ICML_HOST:-icml}
      - SERVICE_ICML_PORT=${SERVICE_ICML_PORT:-3002}
      - SERVICE_PAGEDJS_CLIENT_ID=59a3392b-0c4f-4318-bbe2-f86eff6d3de4
      - SERVICE_PAGEDJS_SECRET=asldkjLKJLaslkdf897kjhKUJH
      - SERVICE_PAGEDJS_PROTOCOL=${SERVICE_PAGEDJS_PROTOCOL:-http}
      - SERVICE_PAGEDJS_HOST=${SERVICE_PAGEDJS_HOST:-pagedjs}
      - SERVICE_PAGEDJS_PORT=${SERVICE_PAGEDJS_PORT:-3003}
      - SERVICE_XSWEET_CLIENT_ID=59a3392b-0c4f-4318-bbe2-f86eff6d3de4
      - SERVICE_XSWEET_SECRET=asldkjLKJLaslkdf897kjhKUJH
      - SERVICE_XSWEET_PROTOCOL=${SERVICE_XSWEET_PROTOCOL:-http}
      - SERVICE_XSWEET_HOST=${SERVICE_XSWEET_HOST:-xsweet}
      - SERVICE_XSWEET_PORT=${SERVICE_XSWEET_PORT:-3004}
  epubchecker:
    image: cokoapps/epubchecker:1.1.0
    ports:
      - ${SERVICE_EPUB_CHECKER_PORT:-3001}:${SERVICE_EPUB_CHECKER_PORT:-3001}
    environment:
      - PUBSWEET_SECRET=epubchecker_dev_secret
      - POSTGRES_USER=editoria_epubchecker_user
      - POSTGRES_PASSWORD=${PG_EPUB:-#4x#Tc^@*yLmEY}
      - POSTGRES_HOST=159.69.144.208
      - POSTGRES_DB=editoria_xsweet_production_test
      - POSTGRES_PORT=5432
      - SERVER_PORT=${SERVICE_EPUB_CHECKER_PORT:-3001}
    entrypoint:
      [
        'node_modules/.bin/wait-for-it',
        '159.69.144.208:5432',
        '--',
        'sh',
        'scripts/setupDevServer.sh',
      ]
    command: ['node', './server/startServer.js']
  icml:
    image: cokoapps/icml:1.1.0
    ports:
      - ${SERVICE_ICML_PORT:-3002}:${SERVICE_ICML_PORT:-3002}
    environment:
      - PUBSWEET_SECRET=icml_dev_secret
      - POSTGRES_USER=editoria_icml_user
      - POSTGRES_PASSWORD=${IC_PG:-!F3pnFJyqZK59k}
      - POSTGRES_HOST=159.69.144.208
      - POSTGRES_DB=editoria_icml_production_test
      - POSTGRES_PORT=5432
      - SERVER_PORT=${SERVICE_ICML_PORT:-3002}
      - NODE_ENV=development
    entrypoint:
      [
        'node_modules/.bin/wait-for-it',
        '159.69.144.208:5432',
        '--',
        'sh',
        'scripts/setupDevServer.sh',
      ]
    command: ['node', './server/startServer.js']

  pagedjs:
    image: cokoapps/pagedjs:1.2.0
    ports:
      - ${SERVICE_PAGEDJS_PORT:-3003}:${SERVICE_PAGEDJS_PORT:-3003}
    environment:
      - PUBSWEET_SECRET=pagedjs_dev_secret
      - POSTGRES_USER=editoria_pagedjs_user
      - POSTGRES_PASSWORD=${PG_PA:-tyxaZwqsTH*Sf6}
      - POSTGRES_HOST=159.69.144.208
      - POSTGRES_DB=editoria_pagedjs_production_test
      - POSTGRES_PORT=5432
      - SERVER_PORT=${SERVICE_PAGEDJS_PORT:-3003}
      - SERVER_PROTOCOL=http
      - SERVER_HOST=pagedjs
      - NODE_ENV=development
    security_opt:
      - seccomp:unconfined
    entrypoint:
      [
        'node_modules/.bin/wait-for-it',
        '159.69.144.208:5432',
        '--',
        'sh',
        'scripts/setupDevServer.sh',
      ]
    command: ['node', './server/startServer.js']

  xsweet:
    image: cokoapps/xsweet:1.1.1
    ports:
      - ${SERVICE_XSWEET_PORT:-3004}:${SERVICE_XSWEET_PORT:-3004}
    environment:
      - PUBSWEET_SECRET=xsweet_dev_secret
      - POSTGRES_USER=editoria_xsweet_user
      - POSTGRES_PASSWORD=${PG_XS:-3Bp3Y79SUqG*wu}
      - POSTGRES_HOST=159.69.144.208
      - POSTGRES_DB=editoria_xsweet_production_test
      - POSTGRES_PORT=5432
      - SERVER_PORT=${SERVICE_XSWEET_PORT:-3004}
      - NODE_ENV=development
    entrypoint:
      [
        'node_modules/.bin/wait-for-it',
        '159.69.144.208:5432',
        '--',
        'sh',
        'scripts/setupDevServer.sh',
      ]
    command: ['node', './server/startServer.js']
  file_hosting:
    image: minio/minio
    ports:
      - ${S3_PORT:-9000}:9000
    volumes:
      - minio_storage:/data
    environment:
      - MINIO_ACCESS_KEY=${S3_ACCESS_KEY_ID_ADMIN:-admin}
      - MINIO_SECRET_KEY=${S3_SECRET_ACCESS_KEY_ADMIN:-superSecretAdminPassword}
    command: server /data
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 30s
      timeout: 20s
      retries: 10

  createbucket:
    image: minio/mc
    depends_on:
      file_hosting:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add editoria ${S3_PROTOCOL:-http}://${S3_HOST:-file_hosting}:${S3_PORT:-9000} ${S3_ACCESS_KEY_ID_ADMIN:-admin} ${S3_SECRET_ACCESS_KEY_ADMIN:-superSecretAdminPassword};
      /usr/bin/mc admin user add editoria/ ${S3_ACCESS_KEY_ID_USER:-editoria} ${S3_SECRET_ACCESS_KEY_USER:-superSecretUserPassword};
      /usr/bin/mc admin user enable editoria/ ${S3_ACCESS_KEY_ID_USER:-editoria};
      /usr/bin/mc mb editoria/${S3_BUCKET:-uploads};
      /usr/bin/mc admin policy set editoria/ readwrite user=${S3_ACCESS_KEY_ID_USER:-editoria};
      exit 0;
      "
volumes:
  minio_storage:
